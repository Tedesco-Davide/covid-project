<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0718.1543                               -->
<workbook original-version='18.1' source-build='2019.2.2 (20192.19.0718.1543)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='HighestInfectionRate_VIEW (CovidProject)' inline='true' name='federated.0rmh72r15dxg3b11pps0l0g4x1xl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-S1CDCAG' name='sqlserver.0yk3pku1d8cgy61ez5iru1ni3tsx'>
            <connection authentication='sspi' class='sqlserver' dbname='CovidProject' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-S1CDCAG' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.0yk3pku1d8cgy61ez5iru1ni3tsx' name='HighestInfectionRate_VIEW' table='[dbo].[HighestInfectionRate_VIEW]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[HighestInfectionRate_VIEW]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>131</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[HighestInfectionRate_VIEW]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>131</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[HighestInfectionRate_VIEW]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infection_rate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[infection_rate]</local-name>
            <parent-name>[HighestInfectionRate_VIEW]</parent-name>
            <remote-alias>infection_rate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Highest Infection Count' datatype='integer' name='[highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='integer' name='[infection_rate]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.0834473' measure-ordering='alphabetic' measure-percentage='0.916553' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='HighestInfectionRateDate_VIEW (CovidProject)' inline='true' name='federated.0wsaov91wryqay1fbu7011n5bhq5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-S1CDCAG' name='sqlserver.10403jg083vajx1fea1o81gdmr1c'>
            <connection authentication='sspi' class='sqlserver' dbname='CovidProject' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-S1CDCAG' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.10403jg083vajx1fea1o81gdmr1c' name='HighestInfectionRateDate_VIEW' table='[dbo].[HighestInfectionRateDate_VIEW]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[HighestInfectionRateDate_VIEW]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>131</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[HighestInfectionRateDate_VIEW]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[HighestInfectionRateDate_VIEW]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>131</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[HighestInfectionRateDate_VIEW]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infection_rate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[infection_rate]</local-name>
            <parent-name>[HighestInfectionRateDate_VIEW]</parent-name>
            <remote-alias>infection_rate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Highest Infection Count' datatype='integer' name='[highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='integer' name='[infection_rate]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.0971272' measure-ordering='alphabetic' measure-percentage='0.902873' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='TotalGlobalDeathsSum_VIEW (CovidProject)' inline='true' name='federated.1ahrkuz06ctdcl180n1w605tdky5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-S1CDCAG' name='sqlserver.11b49ut0fejgim1gum0e41f6hckv'>
            <connection authentication='sspi' class='sqlserver' dbname='CovidProject' odbc-native-protocol='yes' one-time-sql='' port='0' server='DESKTOP-S1CDCAG' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.11b49ut0fejgim1gum0e41f6hckv' name='TotalGlobalDeathsSum_VIEW' table='[dbo].[TotalGlobalDeathsSum_VIEW]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>total_global_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_global_cases]</local-name>
            <parent-name>[TotalGlobalDeathsSum_VIEW]</parent-name>
            <remote-alias>total_global_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_global_deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_global_deaths]</local-name>
            <parent-name>[TotalGlobalDeathsSum_VIEW]</parent-name>
            <remote-alias>total_global_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_death_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[global_death_percentage]</local-name>
            <parent-name>[TotalGlobalDeathsSum_VIEW]</parent-name>
            <remote-alias>global_death_percentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Global Death Percentage' datatype='real' name='[global_death_percentage]' role='measure' type='quantitative' />
      <column caption='Total Global Cases' datatype='real' name='[total_global_cases]' role='measure' type='quantitative' />
      <column caption='Total Global Deaths' datatype='integer' name='[total_global_deaths]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.443228' measure-ordering='alphabetic' measure-percentage='0.556772' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='HighestDeathCountContinents_VIEW (CovidProject)' inline='true' name='federated.1pcbxzr0nou5jj14evtr31iums1s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-S1CDCAG' name='sqlserver.1xwohpk14sfiud1g09sd70pz9pts'>
            <connection authentication='sspi' class='sqlserver' dbname='CovidProject' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-S1CDCAG' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.1xwohpk14sfiud1g09sd70pz9pts' name='HighestDeathCountContinents_VIEW' table='[dbo].[HighestDeathCountContinents_VIEW]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[HighestDeathCountContinents_VIEW]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_death_count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_death_count]</local-name>
            <parent-name>[HighestDeathCountContinents_VIEW]</parent-name>
            <remote-alias>total_death_count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
      <column-instance column='[continent]' derivation='Attribute' name='[attr:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.50342' measure-ordering='alphabetic' measure-percentage='0.49658' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:continent:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#c04f23'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#e16220'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f2822a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f5a847'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#c04f23'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e16220'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f2822a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f5a847'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Offline' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalGlobalDeathsSum_VIEW (CovidProject)' name='federated.1ahrkuz06ctdcl180n1w605tdky5' />
          </datasources>
          <datasource-dependencies datasource='federated.1ahrkuz06ctdcl180n1w605tdky5'>
            <column caption='Global Death Percentage' datatype='real' name='[global_death_percentage]' role='measure' type='quantitative' />
            <column-instance column='[global_death_percentage]' derivation='Sum' name='[sum:global_death_percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_global_cases]' derivation='Sum' name='[sum:total_global_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_global_deaths]' derivation='Sum' name='[sum:total_global_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Global Cases' datatype='real' name='[total_global_cases]' role='measure' type='quantitative' />
            <column caption='Total Global Deaths' datatype='integer' name='[total_global_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ahrkuz06ctdcl180n1w605tdky5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ahrkuz06ctdcl180n1w605tdky5].[sum:global_death_percentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ahrkuz06ctdcl180n1w605tdky5].[sum:total_global_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ahrkuz06ctdcl180n1w605tdky5].[sum:total_global_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ahrkuz06ctdcl180n1w605tdky5].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ahrkuz06ctdcl180n1w605tdky5].[sum:total_global_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ahrkuz06ctdcl180n1w605tdky5].[sum:total_global_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ahrkuz06ctdcl180n1w605tdky5].[sum:global_death_percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ahrkuz06ctdcl180n1w605tdky5].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='259' />
            <format attr='width' field='[federated.1ahrkuz06ctdcl180n1w605tdky5].[:Measure Names]' value='194' />
            <format attr='height' value='30' />
            <format attr='text-format' field='[federated.1ahrkuz06ctdcl180n1w605tdky5].[Multiple Values]' value='' />
            <format attr='text-format' field='[federated.1ahrkuz06ctdcl180n1w605tdky5].[sum:global_death_percentage:qk]' value='n#,##0.00&quot; %&quot;;-#,##0.00&quot; %&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1ahrkuz06ctdcl180n1w605tdky5].[:Measure Names]' value='32' />
            <format attr='background-color' value='#5555ff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#ffffff' />
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ahrkuz06ctdcl180n1w605tdky5].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.3314917087554932' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1ahrkuz06ctdcl180n1w605tdky5].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C150022F-F593-4299-ADA1-00AE6988ABA5}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='HighestDeathCountContinents_VIEW (CovidProject)' name='federated.1pcbxzr0nou5jj14evtr31iums1s' />
          </datasources>
          <datasource-dependencies datasource='federated.1pcbxzr0nou5jj14evtr31iums1s'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_death_count]' derivation='Sum' name='[sum:total_death_count:qk]' pivot='key' type='quantitative' />
            <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1pcbxzr0nou5jj14evtr31iums1s].[none:continent:nk]' direction='DESC' using='[federated.1pcbxzr0nou5jj14evtr31iums1s].[sum:total_death_count:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1pcbxzr0nou5jj14evtr31iums1s].[sum:total_death_count:qk]' value='92' />
            <format attr='height' field='[federated.1pcbxzr0nou5jj14evtr31iums1s].[none:continent:nk]' value='32' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1pcbxzr0nou5jj14evtr31iums1s].[none:continent:nk]' value='115' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='204' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1pcbxzr0nou5jj14evtr31iums1s].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.88955801725387573' />
                <format attr='mark-color' value='#5555ff' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='690' />
                <format attr='maxwidth' value='690' />
                <format attr='minheight' value='696' />
                <format attr='maxheight' value='696' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pcbxzr0nou5jj14evtr31iums1s].[sum:total_death_count:qk]</rows>
        <cols>[federated.1pcbxzr0nou5jj14evtr31iums1s].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{58ED0936-6BDB-46E9-BA9C-D5983A662042}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected per  Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='HighestInfectionRate_VIEW (CovidProject)' name='federated.0rmh72r15dxg3b11pps0l0g4x1xl' />
          </datasources>
          <mapsources>
            <mapsource name='Offline' />
          </mapsources>
          <datasource-dependencies datasource='federated.0rmh72r15dxg3b11pps0l0g4x1xl'>
            <column caption='Percent Population Infected' datatype='integer' name='[infection_rate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[infection_rate]' derivation='Sum' name='[sum:infection_rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[Latitude (generated)]</column>
            <column>[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[Longitude (generated)]' field-type='quantitative' max='20916898.859851949' min='-12782036.047922438' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[Latitude (generated)]' field-type='quantitative' max='13524833.734028973' min='-6482402.4076787028' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[sum:infection_rate:qk]' num-steps='50' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[sum:infection_rate:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[none:location:nk]' />
              <color column='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[sum:infection_rate:qk]' />
              <geometry column='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-style' value='normal' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='normal' />
                <format attr='font-family' value='Tableau Light' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[Latitude (generated)]</rows>
        <cols>[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1FEFE2A1-5DFF-4513-9512-548E6B40F194}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='HighestInfectionRateDate_VIEW (CovidProject)' name='federated.0wsaov91wryqay1fbu7011n5bhq5' />
          </datasources>
          <datasource-dependencies datasource='federated.0wsaov91wryqay1fbu7011n5bhq5'>
            <column-instance column='[infection_rate]' derivation='Avg' name='[avg:infection_rate:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[infection_rate]' derivation='Avg' forecast-column-base='[avg:infection_rate:qk]' forecast-column-type='forecast-value' name='[fVal:avg:infection_rate:qk]' pivot='key' type='quantitative' />
            <column caption='Percent Population Infected' datatype='integer' name='[infection_rate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wsaov91wryqay1fbu7011n5bhq5].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wsaov91wryqay1fbu7011n5bhq5].[tmn:date:qk]' value='344' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:location:nk]' />
              <text column='[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:location:nk]' />
              <color column='[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:Forecast Indicator:nk]' />
              <text column='[federated.0wsaov91wryqay1fbu7011n5bhq5].[fVal:avg:infection_rate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wsaov91wryqay1fbu7011n5bhq5].[fVal:avg:infection_rate:qk]</rows>
        <cols>[federated.0wsaov91wryqay1fbu7011n5bhq5].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{AEECDFA1-4130-4FE2-8068-511E9AFBDC66}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='6' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='22' param='horz' type='layout-flow' w='98932' x='534' y='885'>
            <zone h='98230' id='19' param='horz' type='layout-flow' w='86724' x='534' y='885'>
              <zone h='98230' id='17' type='layout-basic' w='86724' x='534' y='885'>
                <zone h='12942' id='5' name='Sheet 1' w='39477' x='534' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='38717' id='20' name='Sheet 2' w='39477' x='534' y='13827'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='51659' id='24' name='Sheet 3' w='47247' x='40011' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46571' id='26' name='Sheet 4' w='86724' x='534' y='52544'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='183' h='98230' id='28' is-fixed='true' type='layout-basic' w='12208' x='87258' y='885'>
              <zone h='51659' id='21' param='vert' type='layout-flow' w='12208' x='87258' y='885'>
                <zone fixed-size='145' h='16925' id='23' is-fixed='true' name='Sheet 2' pane-specification-id='0' param='[federated.1pcbxzr0nou5jj14evtr31iums1s].[none:continent:nk]' type='color' w='12208' x='87258' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='387' h='34734' id='25' is-fixed='true' name='Sheet 3' pane-specification-id='0' param='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[sum:infection_rate:qk]' type='color' w='12208' x='87258' y='17810'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='46571' id='29' param='vert' type='layout-flow' w='12208' x='87258' y='52544'>
                <zone fixed-size='404' h='45575' id='27' is-fixed='true' name='Sheet 4' pane-specification-id='0' param='[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:location:nk]&#10;[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:Forecast Indicator:nk]' type='color' w='12208' x='87258' y='52544'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='44' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98230' id='45' param='vert' type='layout-flow' w='98932' x='534' y='885'>
                <zone fixed-size='96' h='12942' id='5' is-fixed='true' name='Sheet 1' w='39477' x='534' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51659' id='24' is-fixed='true' name='Sheet 3' w='47247' x='40011' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='387' h='34734' id='25' name='Sheet 3' pane-specification-id='0' param='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[sum:infection_rate:qk]' type='color' w='12208' x='87258' y='17810'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38717' id='20' is-fixed='true' name='Sheet 2' w='39477' x='534' y='13827'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='145' h='16925' id='23' name='Sheet 2' pane-specification-id='0' param='[federated.1pcbxzr0nou5jj14evtr31iums1s].[none:continent:nk]' type='color' w='12208' x='87258' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46571' id='26' is-fixed='true' name='Sheet 4' w='86724' x='534' y='52544'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='404' h='45575' id='27' name='Sheet 4' pane-specification-id='0' param='[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:location:nk]&#10;[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:Forecast Indicator:nk]' type='color' w='12208' x='87258' y='52544'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{08FCC1FD-FE10-4CD8-85D7-411353349CF7}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='241'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ahrkuz06ctdcl180n1w605tdky5].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52A3854A-E3D5-446A-8943-F840DD9C6FF9}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='224'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pcbxzr0nou5jj14evtr31iums1s].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pcbxzr0nou5jj14evtr31iums1s].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FCCAFBE-9EAD-40C2-AA2D-3824B6C91E8C}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='230'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[sum:infection_rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rmh72r15dxg3b11pps0l0g4x1xl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{657AD465-5C7B-49D6-B417-6B8C4AA19170}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:location:nk]&#10;[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:Forecast Indicator:nk]</field>
            <field>[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:location:nk]</field>
            <field>[federated.0wsaov91wryqay1fbu7011n5bhq5].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7EBF4B5-C9F7-4828-BCF4-ACDF684B2E3F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:location:nk]&#10;[federated.0wsaov91wryqay1fbu7011n5bhq5].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D1EFCE6D-CDDB-4DA2-8533-8122DAA51E2E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='66' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABCCAYAAAABpNnUAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJsklEQVR4nO3de0xUZx7G8S/DZQpyaQFHodqC3CrdmGkIG9ooHS9RK5W6VEwKsRZLo+um
      2qayYqO72nWNFRWpUjFdA9IN2WopCtFqI5RdL8ViSyBdKiBeIsoKqOE2dJjOzP4xMEIozMi2
      Wvb8Pgkx8573fc8Lvs857znDHJwsFosFIRRK9bAHIMTDJAEQiiYBEIomARCKJgEQiiYBEIom
      ARCK5mKvwpIlD2IYQjwccgYQiiYBEIomARCKJgEQiiYBEIomARCKJgEQiiYBEIomARCKJgEQ
      imb3VyHEQxIEu7dD4DCbbx6Btwp++WEk7YZFN2BJxvB11JMhZSU8OwXcncHUA03/hsK/Q8VN
      a50ZafDm4/DHt+Dqz7hvu4KsP8cbeyDj9NDNEoBfq6vwVv/vYQWN/J9oz2gmn6N8ZkDmm3Dj
      CKT/FZr1oPaG6Bch9lmoKPyZd/gzkwCI0fOBNaugoxg2F8CPfcWGDjhTAGce6uAcIwEY61xA
      uwTemAfj3aH3DpQehI+/sk7ItEMQ3Vd1+yHrv/3Lp3GR8IcUeHrSvaVL7Un4oADaHdi1vw5+
      4wwHiu5N/vvhp4VVb0DkeHDuhYZS2PUx3B7YmTPo1kBKDLgDTRWwIxtu9tWJfAlSXoRJPuAM
      9LTCyf1QUOPYGCQAY1zUClgXBXkb4Ph10MyGbW/DY8CuryBjyfBLoMcmQtNRyKmEDkNf2xWw
      rAE+qLS/76nhwE2o677/cbtEQcY6uJwHrx0HNLB6G2Q8Bm/uAluXT4Lzdng9C9ymwl/+BBva
      YVWedfNEHzi6HSobwKCG2athxTvQ8DpUOpBKuQs0lvnDy89DTYF18gO0lEJuJcQsBH87zZvK
      oOCMdfL3tz13F6aEjXI8QbD7EBzq+9qdNHzVuJfBvQYyj4MBMLRAZi64x8CcgQO/DKVXrGcY
      /fdwoBT8Z0JU3+ayfDjTYO0DA5Qeg7vuEDbJsSHLGWAsC4NgoOTS4OLrN4BomAqMeM3sAwkr
      4IWnwcf9XvHN0Y7n6r0L97RD8PgIVUOC4VbJgCM98ON1uAWEjzDw+kvAXPDoe+0zDVYsvbeM
      u18SAAV7aR0kqmFnGlxosZYl7YbfOtj+yjUgGiLGwdVRLINGQ60e8GIirFsP6lJI2wAtBmx3
      zBwlS6CxrAGuAFNCBxeHTgEuwfd2moeHQnXJvcl/v5r+BZdM8MLv7v9I2ngFJkyBcQPKxoXC
      BKB+hIFHRgA34TpAGIQ6Q0le3+QfBQnAWNYGhf+EaUmwYLK1SDMbkqZBRQm09VX7vh6YANPD
      ra/7j6KtbTA1BvxcrPfuZ6+BeRPuY///gb8VgX88/DkJNH39qr3BzU7TY4XQMw3eXgBqQK2B
      VUnQUwGn2gZUdANvNeACwQvg99OhsrDvYr7F+j3GPG8NoHcYrFltDZGjZAk0xn2zH7YugTe2
      wGv9t0EzrbdB+7Udgw+DIGUzxDtDYwGsPwJFORDxDuwrgJ4mOJoHJ4MdXwIBXD4Ea+rh9WTY
      tcg68Xu74No5+Ef58O1+/AbStlpvg+a9du82aNrHA64LTNZ3kjfugyc9rf1WfgjZ/dcHdZBz
      HN5JhYJUaKqCvDwI3uD4+J3sPR1angoh/p/JEkgomgRAKJoEQCiaBEAomgRAKJoEQCiaBEAo
      mgRAKJoEQCia3XeCL1y48KDGIsQDZzcAzc3ND2osQjxwsgQSiiYBEIomARCKJgEQiiYBEIom
      ARCKJgEQiiYBEIomH4oXDjEYDBQVFVFcXExnZydeXl7MmjWLpUuXoh70sB6ruro6Nm3axCOP
      PEJGRgb+/tbHvbW1tXH48GEqKiq4e/cuABMnTuSVV15Bp9Ph5OQ07BgsFgtlZWXk5+dz584d
      fH19efXVV5k1a9agdteuXePgwYNUV1fT29uLr68vixcvJi4uDpVq8DFfAiDsMhqNZGdno1Kp
      2Lt3L76+vnR2dnL27Fl++OGHIQHo6uoiPz+f2NhYvvvuu0Hbzp07h4+PDzt37sTPzw+LxUJN
      TQ05OTm4uLgwY8aMYcdRXl7O4cOHeffddwkLC6OhoYHMzEzc3Nxs7b744gs+/fRTEhMTSU9P
      x9XVlcbGRrKysjCZTCxatAiA7u5uDhw4IAEQ9n377bcYDAbWrl2Lq6srAF5eXsyfP39IXYvF
      QnFxMYGBgeh0uiEBiI+PH/TayckJrVZLQkIC58+fHzYAnZ2dnDhxgpUrVxIREQFAREQEKSkp
      FBUVERUVhYeHBxqNhh07duDt7W1rGxoayuLFi6moqLCVlZaWEhISItcAYmQWi4WzZ88yZ84c
      2+QfSW1tLQ0NDSxbtmzE5cxARqOR6upqnnrqqWHrNDc3o1KpCAkJGVQeGRmJs7MzLS3Wx9tp
      tdpBk79fd3c3Hh4ettfx8fHExcXJGUCMrKenh46ODurr6/nss8+4ePEiJpPpJ9ft7e3tFBQU
      kJycjKenp92+e3t7qauro7CwkMDAQObNmzds3ZaWFry9vYf0q1arcXV1pbW1laCgoCHt+gN8
      8uRJ0tPTh2yXAIgRmUwmDAYD0dHRJCcnD9p26tQptmzZwvr16zl9+jRVVVVs2rTJoTMFgEql
      4tFHH+WJJ56gqqqKpqYmgoOD/+cx90/6jz76iIULF5KQkMD06dN/sq4EQIyo/wh769YtwsPD
      B22bNGkSRqOR9vZ2Tpw4QW1tLV9++eWQPlJSUoiIiOC9994btAxxcXFh8uTJLF++nNLSUj75
      5BPWrl2Li8vQaanRaOjo6KCrqwsvLy9bucFgwGg0Mn78eFtZeXk5JSUlbNu2jYCAgBG/PwmA
      GJGbmxtarZby8nJiYmIGHd0vX76Mt7c3fn5+vP/++0PaXrx4kT179rB582bbbdDhBAQEoNfr
      6e3t/ckABAQEYDabaWxsRKvV2spra2sxmUxoNBrbmI4dO0ZaWprdyQ/yRphwwNy5c+nu7iY7
      O5v29nbMZjNff/01n3/+OQsWLHC4H71ez969eykrK6O93fpXyMxmM/X19ezbt4/IyEjbGeL8
      +fOkpqbS1mZ9VHT/XaecnBzq6uowm83U1dWRm5tLXFycrV1ZWRnPPfecQ5Mf5AwgHODp6cnG
      jRvJy8tj+fLlGI1GgoKCSE1NJTIy0uF+3N3d0el0HDlyhP3796PX61GpVAQEBJCYmMjMmTMB
      6xq+oqKCZ555Bj8/P1t7nU6H2Wxm69atg94IG7i+v337NkePHiU3N3fI/vuXYXq9nrS0NNra
      2uQjkeLXp7W1laysLFavXm1b2vxSZAkkfnVqamqIjY39xSc/yIfihcLJGUAomgRAKJoEQCja
      fwG2VEHKoNf1nAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      2XgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
